//METODO 1:creazione classe JS

/*function spesa(){
    let data;
    let getData = ()=>{
        return data;
    }
}
*/

//METODO 2 : creazione classe JS (prototype (Estendere eventuali classi))

/*let s = new spesa();
s.prototype.setData = ()=>{   
}
*/

//Metodo 3 : JSON (oggetti sono istanze della classe)

/*let Spesa ={

}
*/

//Metodo 4 - ES6
/*
    - NO overloading - polimorfismo

    - Costruttore anche non esplicitato

    - Non si può gestire una diversa visibilità delle proprietà(no protected privato)

    - Non esistono le interfacce e le classi astratte

*/
class Spesa{

    _data = null;
    _negozio = null;
    _utente = null;
    //_importo;//equivalente a scrivere = null

    get data(){ //Controllo di varabile fattibile
        if(this._data)
            return this._data
        else
            return new Date();
    }

    set data(data){
        if(typeof data === "object"){
            this._data = data;
        }
    }

    constructor(negozio, importo, utente, data = new Date()){//data opzionale
        this._data = data;
        this._negozio = negozio;
        //Posso definire nuovi attributi anche nelle  funzioni
        this._importo = importo;
        //------------------ _importo non definito ma definisco nella funzione
        this._utente = utente;
    }

    prova(){

    }

}

let s = new Spesa("EsseLunga",12.5,1);
console.log(s.data);